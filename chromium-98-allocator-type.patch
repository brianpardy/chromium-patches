From d7c70bc3b4679eb663283836f983ef2033c8792c Mon Sep 17 00:00:00 2001
From: Ivan Murashov <ivan.murashov@lge.com>
Date: Wed, 01 Dec 2021 06:36:30 +0000
Subject: [PATCH] GCC: Use arguments with same type for std::max

Otherwise GCC produces errors like:
../../base/allocator/partition_allocator/partition_alloc_forward.h:32:38:
error: no matching function for call to 'max(long unsigned int, int)'

Bug: 819294
Change-Id: I65e3b435f4992dc6f7f408567f4281458c5790ac
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3309177
Reviewed-by: Benoit Lize <lizeb@chromium.org>
Reviewed-by: Kentaro Hara <haraken@chromium.org>
Commit-Queue: Ivan Murashov <ivan.murashov@lge.com>
Cr-Commit-Position: refs/heads/main@{#946887}
---

diff --git a/base/allocator/partition_allocator/partition_alloc_forward.h b/base/allocator/partition_allocator/partition_alloc_forward.h
index 938ea38..38aaa66 100644
--- a/base/allocator/partition_allocator/partition_alloc_forward.h
+++ b/base/allocator/partition_allocator/partition_alloc_forward.h
@@ -28,7 +28,8 @@
 // platforms, as Chrome's requirement is C++14 as of 2020.
 #if defined(__STDCPP_DEFAULT_NEW_ALIGNMENT__)
 constexpr size_t kAlignment =
-    std::max(alignof(max_align_t), __STDCPP_DEFAULT_NEW_ALIGNMENT__);
+    std::max(alignof(max_align_t),
+             static_cast<size_t>(__STDCPP_DEFAULT_NEW_ALIGNMENT__));
 #else
 constexpr size_t kAlignment = alignof(max_align_t);
 #endif
